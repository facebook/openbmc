From 6b9be227001547cd587799a8ce0fbbfe73288cef Mon Sep 17 00:00:00 2001
From: Peter Delevoryas <pdel@fb.com>
Date: Fri, 20 May 2022 17:07:55 -0700
Subject: [PATCH 05/65] hw/arm/aspeed: Add fb_machine_class_init

Signed-off-by: Peter Delevoryas <pdel@fb.com>
---
 hw/arm/aspeed.c | 332 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 332 insertions(+)

diff --git a/hw/arm/aspeed.c b/hw/arm/aspeed.c
index f956b4a77e..fa9d553a30 100644
--- a/hw/arm/aspeed.c
+++ b/hw/arm/aspeed.c
@@ -904,6 +904,30 @@ static void fuji_bmc_i2c_init(AspeedMachineState *bmc)
     }
 }
 
+static void wedge100_i2c_init(AspeedMachineState *bmc)
+{
+    AspeedSoCState *soc = &bmc->soc;
+    I2CBus *i2c[14];
+
+    for (int i = 0; i < 14; i++) {
+        i2c[i] = aspeed_i2c_get_bus(&soc->i2c, i);
+    }
+
+    i2c_slave_create_simple(i2c[3], TYPE_TMP75, 0x48);
+    i2c_slave_create_simple(i2c[3], TYPE_TMP75, 0x49);
+    i2c_slave_create_simple(i2c[3], TYPE_TMP75, 0x4a);
+    i2c_slave_create_simple(i2c[3], TYPE_TMP75, 0x4b);
+    i2c_slave_create_simple(i2c[3], TYPE_TMP75, 0x4c);
+    i2c_slave_create_simple(i2c[8], TYPE_TMP75, 0x48);
+    i2c_slave_create_simple(i2c[8], TYPE_TMP75, 0x49);
+    aspeed_eeprom_init(i2c[6], 0x51, 64 * KiB);
+    aspeed_eeprom_init(i2c[7], 0x50, 2 * KiB);
+
+    /* FIXME: These two EEPROM's are supposed to be fancpld's. */
+    aspeed_eeprom_init(i2c[4], 0x33, 64 * KiB);
+    aspeed_eeprom_init(i2c[8], 0x33, 64 * KiB);
+}
+
 #define TYPE_TMP421 "tmp421"
 
 static void bletchley_bmc_i2c_init(AspeedMachineState *bmc)
@@ -1020,6 +1044,47 @@ static void qcom_dc_scm_firework_i2c_init(AspeedMachineState *bmc)
     i2c_slave_create_simple(aspeed_i2c_get_bus(&soc->i2c, 9), "max31785", 0x54);
 }
 
+static void create_unimplemented_i2c_device(I2CBus *bus, uint8_t addr)
+{
+    /* Using EEPROM's as placeholders */
+    aspeed_eeprom_init(bus, addr, 64 * KiB);
+}
+
+static void oby35_cl_i2c_init(AspeedMachineState *bmc)
+{
+    AspeedSoCState *soc = &bmc->soc;
+    I2CBus *i2c[16];
+
+    for (int i = 0; i < 16; i++) {
+        i2c[i] = aspeed_i2c_get_bus(&soc->i2c, i);
+    }
+
+    create_unimplemented_i2c_device(i2c[1], 0x71);
+    create_unimplemented_i2c_device(i2c[2], 0x16);
+    create_unimplemented_i2c_device(i2c[2], 0x10);
+    create_unimplemented_i2c_device(i2c[6], 0x20);
+    create_unimplemented_i2c_device(i2c[7], 0x20);
+    create_unimplemented_i2c_device(i2c[8], 0x20);
+}
+
+static void oby35_bb_i2c_init(AspeedMachineState *bmc)
+{
+    AspeedSoCState *soc = &bmc->soc;
+    I2CBus *i2c[16];
+
+    for (int i = 0; i < 16; i++) {
+        i2c[i] = aspeed_i2c_get_bus(&soc->i2c, i);
+    }
+
+    /* FIXME: This is supposed to be an adm1278 */
+    i2c_slave_create_simple(i2c[1], "adm1272", 0x40);
+    /* FIXME: This is supposed to be an ltc4282 */
+    i2c_slave_create_simple(i2c[1], "adm1272", 0x44);
+
+    create_unimplemented_i2c_device(i2c[6], 0x20);
+    create_unimplemented_i2c_device(i2c[7], 0x20);
+}
+
 static bool aspeed_get_mmio_exec(Object *obj, Error **errp)
 {
     return ASPEED_MACHINE(obj)->mmio_exec;
@@ -1611,3 +1676,270 @@ static const TypeInfo aspeed_machine_types[] = {
 };
 
 DEFINE_TYPES(aspeed_machine_types)
+
+struct FBMachineData {
+    const char *parent;
+    const char *name;
+    const char *desc;
+    const char *soc_name;
+    const char *flash_model;
+    uint32_t hw_strap1;
+    uint32_t hw_strap2;
+    uint32_t stdout_path;
+    uint32_t macs_mask;
+    ram_addr_t ram_size;
+    void (*reset)(MachineState *state);
+    void (*i2c_init)(AspeedMachineState *bmc);
+};
+
+static void fb_machine_class_init(ObjectClass *oc, void *data)
+{
+    MachineClass *mc = MACHINE_CLASS(oc);
+    AspeedMachineClass *amc = ASPEED_MACHINE_CLASS(oc);
+    const struct FBMachineData *fb = data;
+
+    if (fb->desc)
+        mc->desc = fb->desc;
+    if (fb->soc_name)
+        amc->soc_name = fb->soc_name;
+    if (fb->hw_strap1)
+        amc->hw_strap1 = fb->hw_strap1;
+    if (fb->hw_strap2)
+        amc->hw_strap2 = fb->hw_strap2;
+    if (fb->flash_model) {
+        amc->fmc_model = fb->flash_model;
+        amc->spi_model = fb->flash_model;
+    }
+    amc->num_cs = 2;
+    if (fb->stdout_path)
+        amc->uart_default = fb->stdout_path;
+    if (fb->macs_mask)
+        amc->macs_mask = fb->macs_mask;
+    if (fb->i2c_init)
+        amc->i2c_init = fb->i2c_init;
+    if (fb->ram_size)
+        mc->default_ram_size = fb->ram_size;
+    mc->default_cpus = mc->min_cpus = mc->max_cpus = aspeed_soc_num_cpus(amc->soc_name);
+}
+
+static const struct FBMachineData fb_machines[] = {
+    {
+        .name        = "minipack-bmc",
+        .desc        = "Facebook Minipack 100 BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx66u51235f",
+        .macs_mask   = ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART1,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "cloudripper-bmc",
+        .desc        = "Facebook Cloudripper BMC (Cortex-A7)",
+        .soc_name    = "ast2600-a3",
+        .hw_strap1   = AST2600_EVB_HW_STRAP1,
+        .hw_strap2   = AST2600_EVB_HW_STRAP2,
+        .flash_model = "mx66l1g45g",
+        .macs_mask   = ASPEED_MAC3_ON,
+        .stdout_path = ASPEED_DEV_UART1,
+        .ram_size    = FUJI_BMC_RAM_SIZE,
+    },
+    {
+        .name        = "grandcanyon-bmc",
+        .desc        = "Facebook GrandCanyon BMC (Cortex-A7)",
+        .soc_name    = "ast2600-a3",
+        .hw_strap1   = AST2600_EVB_HW_STRAP1,
+        .hw_strap2   = AST2600_EVB_HW_STRAP2,
+        .flash_model = "mx66l1g45g",
+        .macs_mask   = ASPEED_MAC3_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = FUJI_BMC_RAM_SIZE,
+    },
+    {
+        .name        = "fby2-bmc",
+        .desc        = "Facebook Yosemitev2 BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "fby3-bmc",
+        .desc        = "Facebook Yosemitev3 BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx66l1g45g",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "fbttn-bmc",
+        .desc        = "Facebook BryceCanyon BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "fbtp-bmc",
+        .desc        = "Facebook TiogaPass BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "cmm-bmc",
+        .desc        = "Facebook Backpack CMM BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART1,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "angelslanding-bmc",
+        .desc        = "Facebook Angels Landing BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON | ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "clearcreek-bmc",
+        .desc        = "Facebook Clear Creek BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON | ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "emeraldpools-bmc",
+        .desc        = "Facebook Emerald Pools BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC3_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "elbert-bmc",
+        .desc        = "Facebook Elbert BMC (Cortex-A7)",
+        .soc_name    = "ast2600-a3",
+        .hw_strap1   = AST2600_EVB_HW_STRAP1,
+        .hw_strap2   = AST2600_EVB_HW_STRAP2,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC3_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = FUJI_BMC_RAM_SIZE,
+    },
+    {
+        .name        = "northdome-bmc",
+        .desc        = "Facebook Northdome BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "wedge100-bmc",
+        .desc        = "Facebook Wedge 100 BMC (ARM926EJ-S)",
+        .soc_name    = "ast2400-a1",
+        .hw_strap1   = PALMETTO_BMC_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART3,
+        .ram_size    = 512 * MiB,
+        .i2c_init    = wedge100_i2c_init,
+    },
+    {
+        .name        = "wedge400-bmc",
+        .desc        = "Facebook Wedge 400 BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx66l1g45g",
+        .macs_mask   = ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART1,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .name        = "galaxy100-bmc",
+        .desc        = "Facebook Galaxy 100 BMC (ARM926EJ-S)",
+        .soc_name    = "ast2400-a1",
+        .hw_strap1   = PALMETTO_BMC_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC1_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 512 * MiB,
+    },
+    {
+        .name        = "yamp-bmc",
+        .desc        = "Facebook YAMP 100 BMC (ARM1176)",
+        .soc_name    = "ast2500-a1",
+        .hw_strap1   = AST2500_EVB_HW_STRAP1,
+        .hw_strap2   = 0,
+        .flash_model = "mx25l25635e",
+        .macs_mask   = ASPEED_MAC0_ON,
+        .stdout_path = ASPEED_DEV_UART5,
+        .ram_size    = 1 * GiB,
+    },
+    {
+        .parent      = MACHINE_TYPE_NAME("ast1030-evb"),
+        .name        = "oby35-cl",
+        .desc        = "Facebook fby35 CraterLake BIC (Cortex-M4)",
+        .i2c_init    = oby35_cl_i2c_init,
+    },
+    {
+        .parent      = MACHINE_TYPE_NAME("ast1030-evb"),
+        .name        = "oby35-bb",
+        .desc        = "Facebook fby35 BaseBoard BIC (Cortex-M4)",
+        .i2c_init    = oby35_bb_i2c_init,
+    },
+};
+
+static void fb_register_machines(void)
+{
+    static TypeInfo types[ARRAY_SIZE(fb_machines)];
+    static char names[ARRAY_SIZE(types)][32];
+
+    for (int i = 0; i < ARRAY_SIZE(fb_machines); i++) {
+        snprintf(names[i], sizeof(names[i]), "%s%s", fb_machines[i].name, TYPE_MACHINE_SUFFIX);
+
+        types[i].name = names[i];
+        types[i].parent = fb_machines[i].parent ? fb_machines[i].parent : TYPE_ASPEED_MACHINE;
+        types[i].class_init = fb_machine_class_init;
+        types[i].class_data = (void*)&fb_machines[i];
+    }
+
+    type_register_static_array(types, ARRAY_SIZE(types));
+}
+
+type_init(fb_register_machines);
-- 
2.38.2

