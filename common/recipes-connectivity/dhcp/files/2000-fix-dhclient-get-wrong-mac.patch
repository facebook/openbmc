diff --git a/common/discover.c b/common/discover.c
index 57fd1b6..fc23b92 100644
--- a/common/discover.c
+++ b/common/discover.c
@@ -550,6 +550,14 @@ add_ipv6_addr_to_interface(struct interface_info *iface,
 }
 #endif /* DHCPv6 */
 
+/* hardware address assignment types */
+#define NET_ADDR_PERM		0	/* address is permanent (default) */
+#define NET_ADDR_RANDOM		1	/* address is generated randomly */
+#define NET_ADDR_STOLEN		2	/* address is stolen from other device */
+#define NET_ADDR_SET		3	/* address is set using dev_set_mac_address() */
+#define MAC_TYPE_PATH "/sys/class/net/%s/addr_assign_type"
+#define MAC_TIMEOUT 60 /* sec */
+
 /* Use the SIOCGIFCONF ioctl to get a list of all the attached interfaces.
    For each interface that's of type INET and not the loopback interface,
    register that interface with the network I/O software, figure out what
@@ -576,6 +584,12 @@ discover_interfaces(int state) {
 
 	static int setup_fallback = 0;
 
+	FILE* fp;
+	char path[64] = {0};
+	char val;
+	int type;
+	int counter;
+
 	if (!begin_iface_scan(&ifaces)) {
 		log_fatal("Can't get list of interfaces.");
 	}
@@ -873,6 +887,23 @@ discover_interfaces(int state) {
 		   interface registerer can set it or not as it chooses. */
 		tmp -> index = -1;
 
+		type = -1;
+		counter = 0;
+		snprintf(path, 64, MAC_TYPE_PATH, tmp->name);
+		while (counter < MAC_TIMEOUT) {
+			/* wait until MAC from NC-SI device */
+			if (access(path, F_OK) == 0) {
+				fp = fopen(path, "r");
+				fread(&val, 1, sizeof(val),fp);
+				fclose(fp);
+				type = val - '0';
+			}
+			if (type == NET_ADDR_SET)
+				break;
+			sleep(1);
+			counter++;
+		}
+
 		/* Register the interface... */
 		switch (local_family) {
 		case AF_INET:
