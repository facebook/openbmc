bus "i2c-0" "ast_i2c.0"
bus "i2c-2" "ast_i2c.2"
bus "i2c-11" "ast_i2c.11"

chip "galaxy100_ec-i2c-0-33"
    label temp1 "CPU Temp"
    label temp2 "DIMM Temp"
    label in0 "CPU Voltage"
    label in1 "+3 Voltage"
    label in2 "+5 Voltage"
    label in3 "+12 Voltage"
    label in4 "DIMM Voltage"
    compute temp1 @*(100), @/(100)
    compute temp2 @*(100), @/(100)
    compute in0 @*(1000/341), @/(1000/341)
    compute in1 @*(1000/341), @/(1000/341)
    compute in2 @*(1000/1705), @/(1000/1705)
    compute in3 @*(1000/1705), @/(1000/1705)
    compute in4 @*(1000/341), @/(1000/341)

chip "pwr1014a-i2c-2-40"
    ignore in0
    ignore in1
    ignore in2
    ignore in3
    ignore in4
    ignore in5
    ignore in6
    ignore in7
    ignore in8
    ignore in9

chip "IR3581-i2c-2-70"
    label in0 "Vout"
    label curr1 "Iout"

chip "IR3584-i2c-2-72"
    label in0 "Vout"
    label curr1 "Iout"

chip "ast_adc-isa-0000"
    ignore in0
    ignore in1
    ignore in2
    label in3 "+5 Bias Voltage"
    label in4 "+6.8 Bias Voltage"
    ignore in5
    ignore in6
    ignore in7
    label in8 "+3.3 Voltage standby"
    label in9 "+2.5 Voltage standby"
    ignore in10
    ignore in11
    ignore in12
    ignore in13
    ignore in14
    ignore in15

#
# ADC settings for kernel 5.x.
# raw-to-real-world-value conversion is described in AST2400 datasheet,
# section 26.4:
#     V1 = (V_REG * 2.5/1024 * (R1+R2)/R2) - (V2 * R1/R2)
# As "2.5/1024" is handled in kernel driver (IIO_VAL_FRACTIONAL_LOG2),
# the formula is simplified to:
#     V1 = (V_REG *(R1+R2)/R2) - (V2 * R1/R2)
#
# The additional "1.04" calibration is calculated by comparing the output
# between kernel 4.1 and 5.x.
#
chip "ast_adc_hwmon-*"
     label in1 "+5 Bias Voltage"
     label in2 "+6.8 Bias Voltage"
     label in3 "+3.3 Voltage standby"
     label in4 "+2.5 Voltage standby"
     compute in1 (@*3)/1.04, (@*1.04)/3
     compute in2 (@*5.7)/1.04, (@*1.04)/5.7
     compute in3 (@*2)/1.04, (@*1.04)/2
     compute in4 (@*2)/1.04, (@*1.04)/2

chip "adm1278-i2c-0-10"

chip "adm1278-i2c-11-10"
    compute curr1 @*2, @/2
