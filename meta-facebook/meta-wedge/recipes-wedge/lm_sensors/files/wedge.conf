
bus "i2c-3" "ast_i2c.3"

bus "i2c-4" "ast_i2c.4"

bus "i2c-6" "ast_i2c.6"

chip "tmp75-i2c-3-48"
     label temp1 "Inlet Temp"
     set temp1_max 70
     set temp1_max_hyst 60

chip "tmp75-i2c-3-49"
     label temp1 "Switch Temp"
     set temp1_max 70
     set temp1_max_hyst 60

chip "tmp75-i2c-3-4a"
     label temp1 "Outlet Temp"
     set temp1_max 70
     set temp1_max_hyst 60

chip "tmp75-i2c-4-4c"
     label temp1 "Microserver Ambient Temp"

chip "max127-i2c-6-28"
     label in0 "+1 Voltage"
     label in1 "+2.5 Voltage"
     ignore in2
     label in3 "+1 Voltage"
     ignore in4
     label in5 "+3.3 Voltage"
     label in6 "+5 Voltage"
     ignore in7

#
# Fan tacho mapping for kernel 4.1.
#
chip "ast_pwm-*"
     label fan1 "Fan 2 front"
     label fan2 "Fan 3 front"
     label fan3 "Fan 1 front"
     label fan4 "Fan 0 front"
     label fan5 "Fan 2 rear"
     label fan6 "Fan 3 rear"
     label fan7 "Fan 1 rear"
     label fan8 "Fan 0 rear"
     ignore fan9
     ignore fan10
     ignore fan11
     ignore fan12
     ignore fan13
     ignore fan14
     ignore fan15
     ignore fan16

#
# Fan tacho mapping for kernel 5.x.
#
chip "aspeed_pwm_tacho-*"
     label fan1 "Fan 2 front"
     label fan2 "Fan 3 front"
     label fan3 "Fan 1 front"
     label fan4 "Fan 0 front"
     label fan5 "Fan 2 rear"
     label fan6 "Fan 3 rear"
     label fan7 "Fan 1 rear"
     label fan8 "Fan 0 rear"

chip "fb_panther_plus-*"
     label temp1 "CPU Temp"
     label temp2 "DIMM0 Temp"
     ignore temp3
     ignore temp4
     ignore temp5

#
# ADC settings for kernel 4.1.
#
chip "ast_adc-isa-0000"
     ignore in0
     ignore in1
     ignore in2
     ignore in3
     ignore in4
     label in5 "+1 Core Voltage"
     label in6 "+1 Analog Voltage"
     label in7 "+5 Voltage"
     label in8 "+3.3 Voltage"
     label in9 "+2.5 Voltage"
     ignore in10
     ignore in11
     ignore in12
     ignore in13
     ignore in14
     ignore in15

#
# ADC settings for kernel 5.x.
# raw-to-real-world-value conversion is described in AST2400 datasheet,
# section 26.4:
#     V1 = (V_REG * 2.5/1024 * (R1+R2)/R2) - (V2 * R1/R2)
# As "2.5/1024" is handled in kernel driver (IIO_VAL_FRACTIONAL_LOG2),
# the formula is simplified to:
#     V1 = (V_REG *(R1+R2)/R2) - (V2 * R1/R2)
#
chip "ast_adc_hwmon-*"
     label in1 "+1 Core Voltage"
     label in2 "+1 Analog Voltage"
     label in3 "+5 Voltage"
     label in4 "+3.3 Voltage"
     label in5 "+2.5 Voltage"
     compute in1 (@*2)-1, (@+1)/2
     compute in2 (@*2)-1, (@+1)/2
     compute in3 @*2, @/2
     compute in4 @*2, @/2
     compute in5 @*2, @/2
