From c67469fda650b4a79a1c1e6fd60a67a8613a8cbc Mon Sep 17 00:00:00 2001
From: Iris Chen <irischenlj@fb.com>
Date: Fri, 24 Jun 2022 11:15:58 -0700
Subject: [PATCH 18/65] hw: m25p80: [spi gpio] Fixing miso is being cleared
 issue

Signed-off-by: Iris Chen <irischenlj@fb.com>
---
 hw/ssi/spi_gpio.c | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/hw/ssi/spi_gpio.c b/hw/ssi/spi_gpio.c
index 401ee3802b..b829b7d87f 100644
--- a/hw/ssi/spi_gpio.c
+++ b/hw/ssi/spi_gpio.c
@@ -30,12 +30,19 @@
 
 static void do_leading_edge(SpiGpioState *s)
 {
-    if (s->CPHA) {
-        s->miso = !!(s->output_byte & 0x80);
-        object_property_set_bool(OBJECT(s->aspeed_gpio),
-                                 "gpioX5", s->miso, NULL);
-    } else {
+    if (!s->CPHA) {
         s->input_byte |= s->mosi ? 1 : 0;
+        /*
+         * According to SPI protocol:
+         * CPHA=0 leading half clock cycle is sampling phase
+         * We technically should not drive out miso
+         * However, when the kernel bitbang driver is setting the clk pin,
+         * it will overwrite the miso value, so we are driving out miso in
+         * the sampling half clock cycle as well to workaround this issue
+         */
+        s->miso = !!(s->output_byte & 0x80);
+        object_property_set_bool(OBJECT(s->aspeed_gpio), "gpioX5", s->miso,
+                                 NULL);
     }
 }
 
@@ -43,10 +50,17 @@ static void do_trailing_edge(SpiGpioState *s)
 {
     if (s->CPHA) {
         s->output_byte |= s->mosi ? 1 : 0;
-    } else {
+        /*
+         * According to SPI protocol:
+         * CPHA=1 trailing half clock cycle is sampling phase
+         * We technically should not drive out miso
+         * However, when the kernel bitbang driver is setting the clk pin,
+         * it will overwrite the miso value, so we are driving out miso in
+         * the sampling half clock cycle as well to workaround this issue
+         */
         s->miso = !!(s->output_byte & 0x80);
-        object_property_set_bool(OBJECT(s->aspeed_gpio),
-                                 "gpioX5", s->miso, NULL);
+        object_property_set_bool(OBJECT(s->aspeed_gpio), "gpioX5", s->miso,
+                                 NULL);
     }
 }
 
-- 
2.38.2

