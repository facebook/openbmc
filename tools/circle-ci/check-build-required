#!/bin/bash
set -e

# Source openbmc setup script.
source "$(dirname "${BASH_SOURCE[0]}")/../../openbmc-init-build-env" \
    "$MACHINE" build

# List of subdirectories that might contain machine-specific code.
MACHINE_METAS="\
    meta-facebook \
    meta-bf \
    meta-portwell \
    "

FORCE="[FORCE]"
INFO="       "

# Branches not named 'master' or 'helium' are likely PRs but might not have
# the CIRCLE_PULL_REQUEST set yet.  This happens in some private repositories
# where developers commit as named branches and then issue pull requests.
#
# Assume any branch name not 'master' or 'helium' is going to be a PR.
if [ "x${CIRCLE_BRANCH}" == "xmaster" -o \
     "x${CIRCLE_BRANCH}" == "xhelium" ]; then
    # Non-PR builds do not have CIRCLE_PULL_REQUEST set.  If not set, then
    # force a full build.
    if [ "x${CIRCLE_PULL_REQUEST}" == "x" ]; then
        echo "$FORCE non-PR"
        export FORCE_BUILD=1
    fi
else
    echo "$INFO Branch is $CIRCLE_BRANCH.  Assuming PR."
fi

# Determine base commit.
ORIGIN_COMMIT="$(git merge-base HEAD origin/helium 2>/dev/null || git merge-base HEAD origin/master)"

# Extract the machine-specific from TEMPLATECONF.  "meta-facebook/meta-foo"
TEMPLATE_BASE=$(realpath --relative-to=.. "$TEMPLATECONF" | cut -d '/' -f1,2)

# Get all modified files for this commit.
ALL_MODIFIED_FILES=$(git diff --name-only "$ORIGIN_COMMIT" --)
for f in $ALL_MODIFIED_FILES
do
    # Check if the file is outside a machine-meta (ex. maybe "common").
    BASE_DIR=$(echo "$f" | cut -d '/' -f1)
    if [[ "$MACHINE_METAS" != *"$BASE_DIR"* ]]; then
        echo "$FORCE $f found outside machine-meta"
        export FORCE_BUILD=1
        continue
    fi

    # Check if the file is inside a top-level meta directory but in a
    # non-machine directory (ex. meta-facebook/classes).
    MACHINE_META=$(echo "$f" | cut -d '/' -f2)
    if [[ "x$MACHINE_META" != "xmeta-"* ]]; then
        echo "$FORCE $f found in $BASE_DIR but outside machine-meta"
        export FORCE_BUILD=1
        continue
    fi

    # Check if the file is inside *this* machine-meta
    # (meaning, somewhere in TEMPLATE_BASE).
    if [[ $f == *"$TEMPLATE_BASE"* ]]; then
        echo "$FORCE $f found for $BOARD"
        export FORCE_BUILD=1
        continue
    fi

    echo "$INFO $BOARD is unaffected by $f"
done

if [ "x$FORCE_BUILD" == "x1" ]; then
    exit
fi

echo "$FORCE Build unnecessary; halt ci."
circleci-agent step halt
