#!/bin/bash
#
# Copyright 2023-present Facebook. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program in a file named COPYING; if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301 USA
#

ATM_LOGFILE="/var/log/mTerm_$1_$2.log"
LOGFILE="/var/log/mTerm_$1.log"
LOGFILE_B="/var/log/mTerm_$1_backup.log"
readonly EXIT_ERROR=255

usage() {
  echo "Usage: sol-util [ mb | cb | mc | cb_pesw0 | cb_pesw1 ]"
  echo "       [Artemis Module]:"
  echo "       sol-util [ cb_accl[1..12]_[1..2] ] uart[0..3] (baudrate)"
  echo "       uart0: CCP  uart1: M7  uart2: PE  uart3: PSOC"
  echo ""
  echo "       sol-util mc [cxl1 | cxl2 ... cxl8] (baudrate)"
  echo "       sol-util [ mb | cb | mc ] --history"
  echo "       sol-util [ cb_accl[1..12]_[1..2] uart0 --history ]"
  echo "       e.g. sol-util cb_accl1_1 uart0"
  echo "       e.g. sol-util cb_accl1_1 fac_uart0"
  echo "       e.g. sol-util mc cxl1"
  echo ""
  echo "       sol-util cb_accl uart0 --history [ enable | disable | status ]"
  exit 1
}

microcom_usage() {
  echo "------------------TERMINAL MULTIPLEXER---------------------"
  echo "CTRL + x : Terminate the connection."
  echo "Run in single mode"
  echo "-----------------------------------------------------------"
}

check_file_exist() {
  local path=$1
  local retry=$2
  local result=0
  local i=0
  while [ $i -le "$retry" ]; do
    if [ -e "$path" ]; then
      # if usb path exist
      result=1
      break
    fi
    sleep 2
    (( i++ ))
  done
  echo $result
}

get_usb_pesw() {
#The dev position should be fixed
  local usb_path=""
  local baudrate="115200"
  local prefix="/dev/serial/by-path/"
  local retry=3
  local comp="$1"

  case $comp in
    cb_pesw0)
      usb_path="platform-1e6a3000.usb-usb-0:1.1.4.1:1.0-port0"
    ;;
    cb_pesw1)
      usb_path="platform-1e6a3000.usb-usb-0:1.1.4.3:1.0-port0"
    ;;
    *)
      echo "The $comp is invalid"
      exit "$EXIT_ERROR";
  esac

  if [ "$(check_file_exist "${prefix}${usb_path}" ${retry})" = 0 ]; then
      echo "The $usb_path is invalid"
      exit "$EXIT_ERROR";
  fi

  echo "-s ${baudrate} ${prefix}${usb_path}"
}

get_artemis_module_usb_dev() {
  local usb_path=""
  local baudrate="57600"
  local prefix="/dev/serial/by-path/"
  local slot="$1"
  local comp="$2"
  local retry=3

  [ -n "$3" ] && baudrate="$3"

  case $slot in
    cb_accl1_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl1_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.3.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl2_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl2_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.2.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl3_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl3_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.4.1.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl4_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl4_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.3.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl5_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl5_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.2.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl6_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl6_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.2.1.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl7_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl7_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.3.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl8_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl8_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.2.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl9_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl9_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.4.1.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl10_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl10_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.3.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl11_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl11_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.2.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl12_1)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.2:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.2:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.2:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.2:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    cb_accl12_2)
      case $comp in
        uart0)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.1:1.0-port0"
        ;;
        uart1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.1:1.1-port0"
        ;;
        uart2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.1:1.2-port0"
        ;;
        uart3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.1.1.1:1.3-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    *)
      echo "The $slot is invalid"
      exit "$EXIT_ERROR"
  esac

  if [ "$(check_file_exist "${prefix}${usb_path}" ${retry})" = 0 ]; then
    echo "The $usb_path is invalid"
    exit "$EXIT_ERROR";
  fi

  echo "-s ${baudrate} ${prefix}${usb_path}"
}

get_mc_usb_dev() {
  local usb_path=""
  local baudrate="115200"
  local prefix="/dev/serial/by-path/"
  local retry=10
  local slot="$1"
  local comp="$2"

  [ -n "$3" ] && baudrate="$3"

  case $slot in
    mc)
      case $comp in
        cxl1)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.2.3:1.0-port0"
        ;;
        cxl2)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.2.4:1.0-port0"
        ;;
        cxl3)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.2.1:1.0-port0"
        ;;
        cxl4)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.2.2:1.0-port0"
        ;;
        cxl5)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.1.4:1.0-port0"
        ;;
        cxl6)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.1.3:1.0-port0"
        ;;
        cxl7)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.1.2:1.0-port0"
        ;;
        cxl8)
          usb_path="platform-1e6a3000.usb-usb-0:1.1.3.1.1:1.0-port0"
        ;;
        *)
          echo "The $comp is invalid"
          exit "$EXIT_ERROR";
        ;;
      esac
    ;;
    *)
      echo "The $slot is invalid"
      exit "$EXIT_ERROR";
    ;;
  esac

  if [ "$(check_file_exist "${prefix}${usb_path}" ${retry})" = 0 ]; then
    echo "The $usb_path is invalid"
    exit "$EXIT_ERROR";
  fi

  echo "-s ${baudrate} ${prefix}${usb_path}"
}

accl_mterm_service_control() {
  local status=$1
  for i in {1..12}
  do
    for j in {1..2}
    do
      if [ "$1" == "enable" ] && [ "$dev_service_status" == "disable" ] ; then
        sv start "mTerm"$i"_"$j""
      elif [ "$1" == "disable" ] && [ "$dev_service_status" == "enable" ]; then
        sv stop "mTerm"$i"_"$j""
      else
        echo "Please Check the Status of ACCL Uart0 mTerm Service"
        exit "$EXIT_ERROR";
      fi
    done
  done
  kv set dev_mterm_service_status "$1"
  echo "Artemis Module mTerm Service (Uart0 History) is "$1"d"
}

SLOT=
COMP=
dev_service_status=$(kv get dev_mterm_service_status)

if [[ $# -gt 4  ||  $# -lt 1 ]]; then
  usage
  exit "$EXIT_ERROR";
fi

# Set Artemis Module mTerm Service on or off (History)
if [ $# -eq 4 ] && [ "$3" == "--history" ]; then
  if [ "$1" == "cb_accl" ] && [ "$2" == "uart0" ] && [ "$4" == "enable" ] || [ "$4" == "disable" ]; then
    accl_mterm_service_control "$4"
  elif  [ "$1" == "cb_accl" ] && [ "$2" == "uart0" ] && [ "$4" == "status" ]; then
    echo "Artemis Module mTerm Service (Uart0 History) is "$dev_service_status"d"
  else
    usage
    exit "$EXIT_ERROR";
  fi
  exit 0
fi

if [ "$1" = "mb" ] || [ "$1" = "cb" ] || [ "$1" = "mc" ] || [[ "$1" =~ ^(cb_accl([1-9]|1[0-2])_(1|2))$ ]]; then
  SLOT=$1
  if [ $# -eq 2 ] && [ "$2" == "--history" ]; then
    cat "$LOGFILE_B" "$LOGFILE" 2>/dev/null
    exit 0;
  # For Artemis Module
  elif [[ "$SLOT" =~ ^(cb_accl([1-9]|1[0-2])_(1|2))$ ]] && [[ "$2" =~ ^(uart[0-3])$ ]]; then
    COMP=$2
    if [ $# -eq 3 ] && [ "$COMP" == "uart0" ] && [ "$3" == "--history" ]; then
      cat "$ATM_LOGFILE" 2>/dev/null
      exit 0;
    fi
  elif [ "$SLOT" = "mc" ] && [[ "$2" =~ ^(cxl[1-8])$ ]]; then
    COMP=$2
  else
    if [ $# -ne 1 ]; then
      usage
      exit "$EXIT_ERROR";
    fi
  fi
elif [[ "$1" =~ ^(cb_pesw(0|1))$ ]]; then
  SLOT=$1
  COMP=$1
else
  usage
  exit "$EXIT_ERROR";
fi

BAUDRATE=$3
USB_PATH=

# Check Comp and SLOT
if [ -n "$COMP" ]; then

  # check BAUDRATE is a number
  if [ -n "$BAUDRATE" ]; then
    if ! [[ "$BAUDRATE" =~ ^[0-9]+$ ]]; then
      echo "$BAUDRATE should be a number"
      echo "$EXIT_ERROR";
    fi
  fi

  if [[ "$SLOT" =~ ^(cb_accl([1-9]|1[0-2])_(1|2))$ ]]; then
    if [ "$COMP" = "uart0" ] && [ "$dev_service_status" = "enable" ]; then
      exec /usr/local/bin/mTerm_client ""$SLOT"_"$COMP""
      exit 0
    elif [[ "$COMP" =~ ^(uart[0-3])$ ]]; then
      read -r PARAMETER BAUDRATE USB_PATH <<< "$(get_artemis_module_usb_dev "$SLOT" "$COMP" "$BAUDRATE")"
    else
      usage
      exit "$EXIT_ERROR";
    fi
  elif [[ "$SLOT" =~ ^(cb_pesw(0|1))$ ]]; then
    read -r PARAMETER BAUDRATE USB_PATH <<< "$(get_usb_pesw "$COMP")"
  elif [ "$SLOT" = "mc" ]; then
    if [[ "$COMP" =~ ^(cxl[1-8])$ ]]; then
      read -r PARAMETER BAUDRATE USB_PATH <<< "$(get_mc_usb_dev "$SLOT" "$COMP" "$BAUDRATE")"
    else
      usage
      exit "$EXIT_ERROR";
    fi
  else
    usage
    exit "$EXIT_ERROR";
  fi

  microcom_usage
  /usr/bin/microcom "$PARAMETER" "$BAUDRATE" "$USB_PATH"
  RET=$?
  exit $RET;
fi

if [ "$1" = "cb" ]; then
  i2cset -y 11 0x5c 0x31 0x00
  sleep 1
elif [ "$1" = "mc" ]; then
  SLOT="cb"  # CB service since CB/MC using same UART but different MUX
  i2cset -y 11 0x5c 0x31 0x01 # CB MUX SEL to MC board (L: CB BIC, H: MC BOARD)
  i2cset -y 69 0x60 0x42 0x00 # MC MUX SEL to MC BIC (H: MC CPLD; L: MC BIC)
  sleep 1
fi

exec /usr/local/bin/mTerm_client "$SLOT"
echo
echo
echo "-----------------------"
echo "Exit from SOL session."
